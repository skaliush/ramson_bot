<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="omnibot">

  <xacro:include filename="inertial_macros.xacro"/>

  <xacro:property name="base_radius" value="0.1"/>
  <xacro:property name="base_height" value="0.09"/>
  <xacro:property name="base_mass" value="3.0"/>
  <xacro:property name="wheel_radius" value="0.03"/>
  <xacro:property name="wheel_width" value="0.02"/>
  <xacro:property name="wheel_mass" value="0.1"/>
  <xacro:property name="lidar_radius" value="0.02"/>
  <xacro:property name="lidar_height" value="0.03"/>
  <xacro:property name="lidar_mass" value="0.16"/>

  <material name="white"><color rgba="1 1 1 1" /></material>
  <material name="black"><color rgba="0 0 0 1"/></material>
  <material name="grey"><color rgba="0.4 0.4 0.4 1"/></material>
  <material name="red"><color rgba="1 0 0 1"/></material>
  <material name="green"><color rgba="0 1 0 1"/></material>
  <material name="blue"><color rgba="0.2 0.2 1 1"/></material>

  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${base_height/2 + wheel_radius}" rpy="0 0 0"/>
  </joint>

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry><cylinder radius="${base_radius}" length="${base_height}"/></geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0"/>
      <geometry><cylinder radius="${base_radius}" length="${base_height}"/></geometry>
    </collision>
    <xacro:inertial_cylinder mass="${base_mass}" length="${base_height}" radius="${base_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <xacro:macro name="omni_wheel" params="suffix x y yaw">
    <link name="wheel_${suffix}">
      <visual>
        <origin rpy="1.5708 0 0"/>
        <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin rpy="1.5708 0 0"/>
        <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
      </collision>
      <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_cylinder>
    </link>

    <joint name="wheel_${suffix}_joint" type="continuous">
      <origin xyz="${x} ${y} ${-base_height/2}" rpy="0 0 ${yaw}"/>
      <parent link="base_link"/><child link="wheel_${suffix}"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>
  </xacro:macro>

  <xacro:omni_wheel suffix="rear"  x="${-base_radius}"     y="0"                         yaw="-1.5708"/>
  <xacro:omni_wheel suffix="left"  x="${ base_radius*0.5}" y="${ base_radius*0.8660254}" yaw="2.6179939"/>
  <xacro:omni_wheel suffix="right" x="${ base_radius*0.5}" y="${-base_radius*0.8660254}" yaw="0.5235988"/>

  <ros2_control name="omni_system" type="system">
    <hardware>
      <!-- <plugin>arduino_omni_control/ArduinoOmniSystem</plugin>
      <param name="serial_port">/dev/ttyUSB0</param>
      <param name="baud_rate">115200</param> -->
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>

    <joint name="wheel_left_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>

    <joint name="wheel_right_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>

    <joint name="wheel_rear_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

  <gazebo>
    <plugin name="gz_ros2_control::GazeboSimROS2ControlPlugin" filename="libgz_ros2_control-system.so"/>
  </gazebo>

  <!-- <gazebo reference="wheel_rear"><mu1>0</mu1><mu2>1</mu2></gazebo> -->

  <joint name="lidar_joint" type="fixed">
    <origin xyz="${base_radius/2} 0 ${(base_height+lidar_height)/2}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child  link="lidar_link"/>
  </joint>

  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${lidar_height}" radius="${lidar_radius}"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${lidar_height}" radius="${lidar_radius}"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="${lidar_mass}" length="${lidar_height}" radius="${lidar_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder>
  </link>
</robot>
